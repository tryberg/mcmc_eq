#!/bin/csh

\rm .gmt*
gmtset MEASURE_UNIT INCH
gmtset ANOT_FONT_SIZE 10
gmtset HEADER_FONT_SIZE 10
gmtset HEADER_OFFSET 0.5c
gmtset LABEL_FONT_SIZE 10
gmtset COLOR_NAN  200/200/200

egrep EZ resmcnx.dat >! t1

# EQ x
psbasemap -JX2/2 -R-2/2/0/100 -B1f0.1g100:"Quake_x dx [km]":/0SWen -K -P -Y8 -X0.7 >! error.ps
paste t1 quakes.dat | awk '{print $3-$14}' | pshistogram -JX -R -W0.1 -Z0 -G0 -K -O -V -F >> error.ps
paste t1 quakes.dat | awk '{print $3-$14}' >! t2
set m = `awk '{i++; s+=$1;}END{printf"%5.2f\n", s/i;}' t2`
set s = `awk '{i++; s+=(($1-1.0*"'$m'")*($1-1.0*"'$m'"));}END{printf"%5.2f\n",sqrt(s/(i-1));}' t2`
echo -2 90  10 0 0 0 "m/s="$m"+-"$s" km" | pstext -JX -R -K -O -N >> error.ps

# EQ y
psbasemap -JX2/2 -R-2/2/0/100 -B1f0.1g100:"Quake_y dy [km]":/0SWen -K -O -X2.35 >> error.ps
paste t1 quakes.dat | awk '{print $4-$15}' | pshistogram -JX -R -W0.1 -Z0 -G0 -K -O -V -F >> error.ps
paste t1 quakes.dat | awk '{print $4-$15}' >! t2
set m = `awk '{i++; s+=$1;}END{printf"%5.2f\n", s/i;}' t2`
set s = `awk '{i++; s+=(($1-1.0*"'$m'")*($1-1.0*"'$m'"));}END{printf"%5.2f\n",sqrt(s/(i-1));}' t2`
echo -2 90  10 0 0 0 "m/s="$m"+-"$s" km" | pstext -JX -R -K -O -N >> error.ps

echo 0 0 | psxy -JX -R -B0:"`pwd`":/0N -Sc0.001 -O -K >> error.ps


# EQ z
psbasemap -JX2/2 -R-2/2/0/100 -B1f0.1g100:"shallower    dz [km]     deeper":/0SWen -K -O -X2.35 >> error.ps
paste t1 quakes.dat | awk '{print $5-$16}' | pshistogram -JX -R -W0.1 -Z0 -G0 -K -O -V -F >> error.ps
paste t1 quakes.dat | awk '{print $5-$16}' >! t2
set m = `awk '{i++; s+=$1;}END{printf"%5.2f\n", s/i;}' t2`
set s = `awk '{i++; s+=(($1-1.0*"'$m'")*($1-1.0*"'$m'"));}END{printf"%5.2f\n",sqrt(s/(i-1));}' t2`
echo -2 90  10 0 0 0 "m/s="$m"+-"$s" km" | pstext -JX -R -K -O -N >> error.ps

#origin time
psbasemap -JX2/2 -R-2/2/0/100 -B1f0.1g100:"Origin time dt [s]":/0SWen -K -O -Y-3.0 -X-4.7 >> error.ps
paste t1 quakes.dat | awk '{print $9+$10-$17}' | pshistogram -JX -R -W0.025 -Z0 -G0 -K -O -V -F >> error.ps
paste t1 quakes.dat | awk '{print $9+$10-$17}' >! t2
set m = `awk '{i++; s+=$1;}END{printf"%5.2f\n", s/i;}' t2`
set s = `awk '{i++; s+=(($1-1.0*"'$m'")*($1-1.0*"'$m'"));}END{printf"%5.2f\n",sqrt(s/(i-1));}' t2`
echo -2 90  10 0 0 0 "m/s="$m"+-"$s" s" | pstext -JX -R -K -O -N >> error.ps

# datat noise
psbasemap -JX2/2 -R0.0/0.35/0/1500 -B0.1f0.05:"Data noise [s]":/0SWen -K -O -X2.35 >> error.ps

# true values
echo 0.05 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/200/200/255 -O -K -N >> error.ps
echo 0.10 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/200/200/255 -O -K -N >> error.ps
echo 0.15 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/200/200/255 -O -K -N >> error.ps
echo 0.20 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/200/200/255 -O -K -N >> error.ps

echo 0.175 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/255/200/200 -O -K -N >> error.ps
echo 0.225 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/255/200/200 -O -K -N >> error.ps
echo 0.275 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/255/200/200 -O -K -N >> error.ps
echo 0.325 | awk '{print $1, 0; print $1, 2000}' | psxy -JX -R -W10/255/200/200 -O -K -N >> error.ps


egrep mod tmpx | awk '{print $6}' | pshistogram -JX -R -W0.0005 -Z0 -G0/0/255 -K -O -V -F >> error.ps
egrep mod tmpx | awk '{print $7}' | pshistogram -JX -R -W0.0005 -Z0 -G42/42/255 -K -O -V -F >> error.ps
egrep mod tmpx | awk '{print $8}' | pshistogram -JX -R -W0.0005 -Z0 -G85/85/255 -K -O -V -F >> error.ps
egrep mod tmpx | awk '{print $9}' | pshistogram -JX -R -W0.0005 -Z0 -G128/128/255 -K -O -V -F >> error.ps

egrep mod tmpx | awk '{print $10}' | pshistogram -JX -R -W0.0005 -Z0 -G255/0/0 -K -O -V -F >> error.ps
egrep mod tmpx | awk '{print $11}' | pshistogram -JX -R -W0.0005 -Z0 -G255/42/42 -K -O -V -F >> error.ps
egrep mod tmpx | awk '{print $12}' | pshistogram -JX -R -W0.0005 -Z0 -G255/85/85 -K -O -V -F >> error.ps
egrep mod tmpx | awk '{print $13}' | pshistogram -JX -R -W0.0005 -Z0 -G255/128/128 -K -O -V -F >> error.ps


# station correction P
egrep RES resmcnx.dat >! t1
psbasemap -JX2/2 -R-0.5/0.5/0/50 -B0.2f0.1g100:"Station correction P dt [s]":/0SWen -K -O -Y-3.0 -X-2.35 >> error.ps
paste t1 stations.dat | awk '{print $3-$11}' | pshistogram -JX -R -W0.01 -Z0 -G0 -K -O -V -F >> error.ps
paste t1 stations.dat | awk '{print $3-$11}' >! t2
set m = `awk '{i++; s+=$1;}END{printf"%5.2f\n", s/i;}' t2`
set s = `awk '{i++; s+=(($1-1.0*"'$m'")*($1-1.0*"'$m'"));}END{printf"%5.2f\n",sqrt(s/(i-1));}' t2`
echo -0.5 45  10 0 0 0 "m/s="$m"+-"$s" s" | pstext -JX -R -K -O -N >> error.ps


# station correction S
psbasemap -JX2/2 -R-0.5/0.5/0/50 -B0.2f0.1g100:"Station correction S dt [s]":/0SWen -K -O -X2.35 >> error.ps
paste t1 stations.dat | awk '{print $4-$12}' | pshistogram -JX -R -W0.01 -Z0 -G0 -K -O -V -F >> error.ps
paste t1 stations.dat | awk '{print $4-$12}' >! t2
set m = `awk '{i++; s+=$1;}END{printf"%5.2f\n", s/i;}' t2`
set s = `awk '{i++; s+=(($1-1.0*"'$m'")*($1-1.0*"'$m'"));}END{printf"%5.2f\n",sqrt(s/(i-1));}' t2`
echo -0.5 45  10 0 0 0 "m/s="$m"+-"$s" s" | pstext -JX -R -K -O -N >> error.ps


# Vp
psbasemap -JX1.2/-5 -R4/9/-5/80 -B1f0.5:"Vp [km/s]":/10f5g1000:"Depth [km]":Swen -K -O -X2.25 -Y0 >> error.ps
egrep EZ resmcnx.dat | awk '{print 4, $5}' | psxy -JX -R -Sc0.05 -Ggreen -K -O >> error.ps

awk '{print $2, $1}' synth_model | psxy -JX -R -W2/blue -K -O -N >> error.ps
awk '{if ($1=="STAN") print $7, $2}' resmcnx.dat | awk '{if (NR==1) {v0=$1;} print v0, $2; print $1, $2; v0=$1;}' | psxy -JX -R -W5/red -O -K -N  >> error.ps
awk '{if ($1=="STAN") print $7-$8, $2}' resmcnx.dat | awk '{if (NR==1) {v0=$1;} print v0, $2; print $1, $2; v0=$1;}' | psxy -JX -R -W1/gray -O -K -N  >> error.ps
awk '{if ($1=="STAN") print $7+$8, $2}' resmcnx.dat | awk '{if (NR==1) {v0=$1;} print v0, $2; print $1, $2; v0=$1;}' | psxy -JX -R -W1/gray -O -K -N  >> error.ps

# Vp/Vs
psbasemap -JX1.2/-5 -R1.501/2/-5/80 -B0.2f0.1:"Vp/Vs":/10f5g1000:"Depth [km]":SwEn -K -O -X1.35  >> error.ps
awk '{print $3, $1}' synth_model | psxy -JX -R -W2/blue -K -O -N >> error.ps
awk '{if ($1=="STAN") print $9, $2}' resmcnx.dat | awk '{if (NR==1) {v0=$1;} print v0, $2; print $1, $2; v0=$1;}' | psxy -JX -R -W5/red -O -K -N  >> error.ps
awk '{if ($1=="STAN") print $9-$10, $2}' resmcnx.dat | awk '{if (NR==1) {v0=$1;} print v0, $2; print $1, $2; v0=$1;}' | psxy -JX -R -W1/gray -O -K -N  >> error.ps
awk '{if ($1=="STAN") print $9+$10, $2}' resmcnx.dat | awk '{if (NR==1) {v0=$1;} print v0, $2; print $1, $2; v0=$1;}' | psxy -JX -R -W1/gray -O -K -N  >> error.ps

echo 0 0 | psxy -JX -R -B0 -Sc0.001 -O >> error.ps

